version: "3.8"

services:
  api:
    build: .
    container_name: api_WATCH
    restart: always
    ports:
      - "5005:5005"
    env_file:
      - .env
    depends_on:
      - postgres
      - otel-collector
      - prometheus
    networks:
      - app_network
    volumes:
      - .:/app
      - .:/src

  postgres:
    image: postgres:latest
    container_name: postgres_apiwatch
    restart: always
    environment:
      POSTGRES_USER: meuuser
      POSTGRES_PASSWORD: minhasenha
      POSTGRES_DB: DBWATCH
      TZ: America/Sao_Paulo
      PGTZ: America/Sao_Paulo
    ports:
      - "5557:5432"
    networks:
      - app_network
    volumes:
      - pgdata:/var/lib/postgresql/data

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "8081:16686"  # Jaeger UI
      - "14268:14268"  # HTTP Collector
      - "14250:14250"  # gRPC Collector
    networks:
      - app_network

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "1888:1888"  # pprof extension
      - "13133:13133"  # health_check extension
      - "4317:4317"  # OTLP gRPC receiver
      - "4318:4318"  # OTLP HTTP receiver
      - "55679:55679"  # zpages extension
    depends_on:
      - jaeger
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app_network
    depends_on:
      - prometheus

networks:
  app_network:
    driver: bridge

volumes:
  pgdata:
